<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="hibernate-configuration" type="NHibernate.Cfg.ConfigurationSectionHandler,NHibernate"/>
    <section name="apworks" type="Apworks.Config.ApworksConfigSection, Apworks"/>
  </configSections>
  <hibernate-configuration xmlns="urn:nhibernate-configuration-2.2">
    <session-factory>
      <property name="connection.provider">NHibernate.Connection.DriverConnectionProvider</property>
      <property name="connection.driver_class">NHibernate.Driver.SqlClientDriver</property>
      <property name="connection.connection_string">data source=KIKAO\KIKAOSQLSERVER;Initial Catalog=AoccountBook;User ID=sa;Password=p@ssw0rd;</property>
      <property name="show_sql">true</property>
      <property name="dialect">NHibernate.Dialect.MsSql2008Dialect</property>
    </session-factory>
  </hibernate-configuration>
  <apworksConfiguration>
    <application bootStrapper="Apworks.Application.BootStrapper, Apworks"/>
    <objectContainer provider="Apworks.ObjectContainers.Unity.UnityContainer, Apworks.ObjectContainers.Unity" section="unityConfiguration"/>
    <generators>
      <generator name="defaultIdentityGenerator" kind="Identity" type="Apworks.Generators.SequentialIdentityGenerator, Apworks"/>
      <generator name="defaultSequenceGenerator" kind="Sequence" type="Apworks.Generators.SequentialIdentityGenerator, Apworks"/>
    </generators>
    <handlers>
      <handler name="TinyLibraryCommandHandlers" kind="Command" sourceType="Assembly" source="TinyLibrary.CommandHandlers"/>
      <handler name="TinyLibraryEventHandlers" kind="Event" sourceType="Assembly" source="TinyLibrary.EventHandlers"/>
    </handlers>
  </apworksConfiguration>
  <apworks>
    <application provider="Apworks.Application.App, Apworks" />
    <objectContainer provider="Apworks.ObjectContainers.Unity.UnityObjectContainer, Apworks.ObjectContainers.Unity" initFromConfigFile="false" sectionName="" />
    <serializers>
      <eventSerializer provider="Apworks.Events.Serialization.DomainEventXmlSerializer, Apworks" />
      <snapshotSerializer provider="Apworks.Snapshots.Serialization.SnapshotXmlSerializer, Apworks" />
    </serializers>
    <generators>
      <sequenceGenerator provider="Apworks.Generators.SequentialIdentityGenerator, Apworks" />
      <identityGenerator provider="Apworks.Generators.SequentialIdentityGenerator, Apworks" />
    </generators>
    <handlers>
      <handler name="commandHandlerRegistration" kind="Command" sourceType="Assembly" source="AccountBook.CommandHandlers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
    </handlers>
    <exceptions>
      <exception type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" behavior="Direct">
        <handlers>
          <handler type="AccountBook.Infrastructure.GeneralExceptionHandler, AccountBook.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
        </handlers>
      </exception>
    </exceptions>
    <interception>
      <interceptors>
        <interceptor name="exception" type="Apworks.Interception.ExceptionHandlingInterceptor, Apworks, Version=2.0.4259.25929, Culture=neutral, PublicKeyToken=8dd847f02992a80e" />
      </interceptors>
      <contracts>
        <contract type="AccountBook.Infrastructure.AccountBookDomainRepository, AccountBook.Infrastructure, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
          <methods>
            <method signature="System.Void Commit()">
              <interceptorRefs>
                <interceptorRef name="exception" />
              </interceptorRefs>
            </method>
          </methods>
        </contract>
      </contracts>
    </interception>
  </apworks>
</configuration>